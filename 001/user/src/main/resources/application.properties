
## 端口
server.port=8802
## 应用名
spring.application.name=User

## RabbitMQ配置
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=kyle
spring.rabbitmq.password=123456

mybatis.type-aliases-package=com.kyle.user
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/my_core?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username = root
spring.datasource.password = 123456



# Consul 的地址和端口（Server 节点和 Client 节点都可以），
# Spring Cloud Consul 会调用 Consul HTTP REST 接口，进行服务注册。
spring.cloud.consul.host=127.0.0.1
spring.cloud.consul.port=8500
# Consul 注册的服务名称，${spring.application.name}变量是我们上面application.properties配置文件中添加的配置。
spring.cloud.consul.discovery.serviceName=${spring.application.name}
# 配置本服务的主机地址
spring.cloud.consul.discovery.hostname=127.0.0.1
# 配置 Consul 健康检查地址，Actuator 组件帮我们进行了实现，所以我们不需要额外的实现，地址在服务启动的时候，打印信息里面可以看到。
spring.cloud.consul.discovery.healthCheckPath=/actuator/health
# 配置 Consul 健康检查频率，也就是心跳频率。
spring.cloud.consul.discovery.healthCheckInterval=15s
# 配置 Consul 注册服务的 Tags，设置为urlprefix-/serviceName的格式，是自动注册到 Fabio 集群中。
spring.cloud.consul.discovery.tags=urlprefix-/${spring.application.name}
# 配置 Consul 注册服务 ID。
spring.cloud.consul.discovery.instanceId=${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
